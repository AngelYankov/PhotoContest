// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotoContest.Data;

namespace PhotoContest.Data.Migrations
{
    [DbContext(typeof(PhotoContestContext))]
    partial class PhotoContestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("1d4c48e4-8870-417b-8ac6-e78efe1aaab5"),
                            RoleId = new Guid("d0a458f4-cba3-4e49-a779-f79a9de41268")
                        },
                        new
                        {
                            UserId = new Guid("e240edfc-64b9-4358-a869-5aadb719e128"),
                            RoleId = new Guid("8a73d7c7-c092-4281-8cde-6dd9a9dd747c")
                        },
                        new
                        {
                            UserId = new Guid("5d608fdc-f7d4-40f2-b052-61a7ea812a23"),
                            RoleId = new Guid("8a73d7c7-c092-4281-8cde-6dd9a9dd747c")
                        },
                        new
                        {
                            UserId = new Guid("a890fe35-c840-4484-bd80-67dbc94ab581"),
                            RoleId = new Guid("8a73d7c7-c092-4281-8cde-6dd9a9dd747c")
                        },
                        new
                        {
                            UserId = new Guid("8a20e519-66ad-46b8-b6c3-18c36fa50a1d"),
                            RoleId = new Guid("a117e076-855e-401a-aeab-844fee43a0a2")
                        },
                        new
                        {
                            UserId = new Guid("021fa300-ffd4-48e2-a93f-d40c17d014f3"),
                            RoleId = new Guid("a117e076-855e-401a-aeab-844fee43a0a2")
                        },
                        new
                        {
                            UserId = new Guid("743f0e66-af28-48b9-8322-61395c10207f"),
                            RoleId = new Guid("a117e076-855e-401a-aeab-844fee43a0a2")
                        },
                        new
                        {
                            UserId = new Guid("71cd9097-0c95-4af2-9e43-da7324880583"),
                            RoleId = new Guid("a117e076-855e-401a-aeab-844fee43a0a2")
                        },
                        new
                        {
                            UserId = new Guid("7cc9804e-2106-4943-994d-91be3d1fab8e"),
                            RoleId = new Guid("a117e076-855e-401a-aeab-844fee43a0a2")
                        },
                        new
                        {
                            UserId = new Guid("56763358-b113-4f96-9a4a-5190c421f1fb"),
                            RoleId = new Guid("a117e076-855e-401a-aeab-844fee43a0a2")
                        },
                        new
                        {
                            UserId = new Guid("c463712b-e235-4fe5-840e-a99736c3fb76"),
                            RoleId = new Guid("a117e076-855e-401a-aeab-844fee43a0a2")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PhotoContest.Data.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e43364e1-28d4-48c3-b4e2-5bd5f43b89b0"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 724, DateTimeKind.Utc).AddTicks(7387),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cars"
                        },
                        new
                        {
                            Id = new Guid("729b970a-ee54-4852-8ac7-d9b3146e886b"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 724, DateTimeKind.Utc).AddTicks(7740),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Animals"
                        },
                        new
                        {
                            Id = new Guid("ad729c24-eda2-4209-93c8-f80d1f47172c"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 724, DateTimeKind.Utc).AddTicks(7762),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nature"
                        },
                        new
                        {
                            Id = new Guid("af4ea8a0-8e69-4746-bbc8-aa4593a11828"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 724, DateTimeKind.Utc).AddTicks(7766),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Architecture"
                        },
                        new
                        {
                            Id = new Guid("fad09db4-8187-4777-9e68-3ba40218c7d3"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 724, DateTimeKind.Utc).AddTicks(7773),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Motorcycles"
                        },
                        new
                        {
                            Id = new Guid("a8c71a51-79f2-46ef-8a88-7983cbb7259a"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 724, DateTimeKind.Utc).AddTicks(7779),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "People"
                        },
                        new
                        {
                            Id = new Guid("28f87c5a-b02a-4422-8b71-4821306279d5"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 724, DateTimeKind.Utc).AddTicks(7781),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("PhotoContest.Data.Models.Contest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCalculated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Phase1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Phase2")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("Contests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e2450bf8-c019-4442-a2c3-ed0210586eed"),
                            CategoryId = new Guid("729b970a-ee54-4852-8ac7-d9b3146e886b"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 6, 10, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Birds",
                            Phase1 = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(2069),
                            Phase2 = new DateTime(2021, 6, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("9dd48e5a-f5f5-4b90-ad93-e0a5ad62e186")
                        },
                        new
                        {
                            Id = new Guid("f8d22e50-664b-483f-a542-ab26135e6772"),
                            CategoryId = new Guid("af4ea8a0-8e69-4746-bbc8-aa4593a11828"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 6, 14, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Skyscrapers",
                            Phase1 = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(2934),
                            Phase2 = new DateTime(2021, 6, 14, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("9dd48e5a-f5f5-4b90-ad93-e0a5ad62e186")
                        },
                        new
                        {
                            Id = new Guid("fd4ec4c7-3976-4a44-9dfa-06967ab471c1"),
                            CategoryId = new Guid("729b970a-ee54-4852-8ac7-d9b3146e886b"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 6, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Snakes",
                            Phase1 = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(2964),
                            Phase2 = new DateTime(2021, 6, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("9dd48e5a-f5f5-4b90-ad93-e0a5ad62e186")
                        },
                        new
                        {
                            Id = new Guid("b2ba5698-bc3a-45ee-8dcb-06e6a2e99a09"),
                            CategoryId = new Guid("e43364e1-28d4-48c3-b4e2-5bd5f43b89b0"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 6, 16, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Muscle cars",
                            Phase1 = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(2971),
                            Phase2 = new DateTime(2021, 6, 16, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("9dd48e5a-f5f5-4b90-ad93-e0a5ad62e186")
                        },
                        new
                        {
                            Id = new Guid("c5d76f38-f3f9-4aaa-931f-0d91e0207a0a"),
                            CategoryId = new Guid("ad729c24-eda2-4209-93c8-f80d1f47172c"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 6, 17, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lakes",
                            Phase1 = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(2977),
                            Phase2 = new DateTime(2021, 6, 17, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("9dd48e5a-f5f5-4b90-ad93-e0a5ad62e186")
                        },
                        new
                        {
                            Id = new Guid("17578ed3-fdfc-4616-9cdb-55a5ff762caf"),
                            CategoryId = new Guid("a8c71a51-79f2-46ef-8a88-7983cbb7259a"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 6, 18, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Couples",
                            Phase1 = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(2985),
                            Phase2 = new DateTime(2021, 6, 18, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("9dd48e5a-f5f5-4b90-ad93-e0a5ad62e186")
                        },
                        new
                        {
                            Id = new Guid("f36e97ee-98af-4f26-93ef-066895d94b2a"),
                            CategoryId = new Guid("729b970a-ee54-4852-8ac7-d9b3146e886b"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 6, 7, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(2993),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wild cats",
                            Phase1 = new DateTime(2021, 5, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Phase2 = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(2992),
                            StatusId = new Guid("27c7d81e-eb1c-469b-8919-a532322273cc")
                        },
                        new
                        {
                            Id = new Guid("548873db-705b-46e7-b88d-230c5f06fd35"),
                            CategoryId = new Guid("fad09db4-8187-4777-9e68-3ba40218c7d3"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 5, 26, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Best look",
                            Phase1 = new DateTime(2021, 5, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Phase2 = new DateTime(2021, 5, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("cf6bf4fb-655e-47cc-8dac-4a39cbff74b6")
                        },
                        new
                        {
                            Id = new Guid("42541f52-8d30-4828-bf66-4eda82735edd"),
                            CategoryId = new Guid("af4ea8a0-8e69-4746-bbc8-aa4593a11828"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 5, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mansions",
                            Phase1 = new DateTime(2021, 5, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Phase2 = new DateTime(2021, 5, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("cf6bf4fb-655e-47cc-8dac-4a39cbff74b6")
                        },
                        new
                        {
                            Id = new Guid("f9f89a56-448a-43c4-a098-fe5b13605999"),
                            CategoryId = new Guid("af4ea8a0-8e69-4746-bbc8-aa4593a11828"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 5, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bridges",
                            Phase1 = new DateTime(2021, 5, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Phase2 = new DateTime(2021, 5, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("cf6bf4fb-655e-47cc-8dac-4a39cbff74b6")
                        },
                        new
                        {
                            Id = new Guid("d7b46312-7197-4c79-8384-1ec2b8577f8d"),
                            CategoryId = new Guid("af4ea8a0-8e69-4746-bbc8-aa4593a11828"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 5, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Historic landmarks",
                            Phase1 = new DateTime(2021, 5, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Phase2 = new DateTime(2021, 5, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("cf6bf4fb-655e-47cc-8dac-4a39cbff74b6")
                        },
                        new
                        {
                            Id = new Guid("d2acdd9c-9427-4fc2-897e-5f52da2190dc"),
                            CategoryId = new Guid("28f87c5a-b02a-4422-8b71-4821306279d5"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 5, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Olympics",
                            Phase1 = new DateTime(2021, 5, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Phase2 = new DateTime(2021, 5, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("cf6bf4fb-655e-47cc-8dac-4a39cbff74b6")
                        },
                        new
                        {
                            Id = new Guid("06e8bf71-fc93-42ff-8c99-a5265a8ea2e9"),
                            CategoryId = new Guid("ad729c24-eda2-4209-93c8-f80d1f47172c"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Finished = new DateTime(2021, 5, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCalculated = false,
                            IsDeleted = false,
                            IsOpen = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sunsets",
                            Phase1 = new DateTime(2021, 5, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Phase2 = new DateTime(2021, 5, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = new Guid("cf6bf4fb-655e-47cc-8dac-4a39cbff74b6")
                        });
                });

            modelBuilder.Entity("PhotoContest.Data.Models.JuryMember", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "ContestId");

                    b.HasIndex("ContestId");

                    b.ToTable("Juries");
                });

            modelBuilder.Entity("PhotoContest.Data.Models.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AllPoints")
                        .HasColumnType("float");

                    b.Property<Guid>("ContestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInWrongCategory")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContestId");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e165b91f-03bf-414e-88b7-c51b87775683"),
                            AllPoints = 0.0,
                            ContestId = new Guid("f36e97ee-98af-4f26-93ef-066895d94b2a"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5058),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Roaring of a lion.",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/c4baabc4-bd02-4bd6-bb33-955556530c8e_lion1.jpg",
                            Title = "Lion King",
                            UserId = new Guid("8a20e519-66ad-46b8-b6c3-18c36fa50a1d")
                        },
                        new
                        {
                            Id = new Guid("0fdb02e1-91e1-4132-9ccc-1f73c7f716b9"),
                            AllPoints = 0.0,
                            ContestId = new Guid("f36e97ee-98af-4f26-93ef-066895d94b2a"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5143),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Going for the kill.",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/da80d3a0-2aaa-4360-871e-699b5507277f_tiger1.jpg",
                            Title = "Tiger",
                            UserId = new Guid("56763358-b113-4f96-9a4a-5190c421f1fb")
                        },
                        new
                        {
                            Id = new Guid("fd4b4d23-a4db-4e8b-be63-4af3c4b45757"),
                            AllPoints = 0.0,
                            ContestId = new Guid("548873db-705b-46e7-b88d-230c5f06fd35"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5150),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Parked for the day.",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/16bb1fa0-8f61-4717-bba1-e14f8c47b616_kawasaki1.jpg",
                            Title = "Kawasaki Ninja",
                            UserId = new Guid("021fa300-ffd4-48e2-a93f-d40c17d014f3")
                        },
                        new
                        {
                            Id = new Guid("507c5f65-497b-4a3c-95f6-cfbc86692ca5"),
                            AllPoints = 0.0,
                            ContestId = new Guid("548873db-705b-46e7-b88d-230c5f06fd35"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5156),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Takaing a small break from the road.",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/dcc53eb5-2024-4242-877c-423e9c0d751f_honda1.jpg",
                            Title = "Honda CBR",
                            UserId = new Guid("c463712b-e235-4fe5-840e-a99736c3fb76")
                        },
                        new
                        {
                            Id = new Guid("59dd9540-a1d8-4360-99d5-ed8302aae5e2"),
                            AllPoints = 0.0,
                            ContestId = new Guid("e2450bf8-c019-4442-a2c3-ed0210586eed"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5163),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hummingbird on a branch.",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/3a425bea-85d7-4473-850b-afb9162dfe7e_colibri1.jpg",
                            Title = "Hummingbird",
                            UserId = new Guid("7cc9804e-2106-4943-994d-91be3d1fab8e")
                        },
                        new
                        {
                            Id = new Guid("94499cdd-e18c-4743-b0c4-2e1b7564c46c"),
                            AllPoints = 0.0,
                            ContestId = new Guid("e2450bf8-c019-4442-a2c3-ed0210586eed"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5171),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Scanning for prey.",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/1d2dfd54-7d9b-41c4-b442-995baa1ac289_eagle1.jpg",
                            Title = "Eagle",
                            UserId = new Guid("71cd9097-0c95-4af2-9e43-da7324880583")
                        },
                        new
                        {
                            Id = new Guid("5edcd3ee-3033-43fe-a222-97fdac5922ab"),
                            AllPoints = 0.0,
                            ContestId = new Guid("06e8bf71-fc93-42ff-8c99-a5265a8ea2e9"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5176),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Beautiful sunset in Kenya",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/ccf1a5e0-b616-4e99-a524-6691e79ca16b_sunset1.jpg",
                            Title = "African sunset",
                            UserId = new Guid("c463712b-e235-4fe5-840e-a99736c3fb76")
                        },
                        new
                        {
                            Id = new Guid("44e5ce67-461c-4082-9acb-c5aceae13a0c"),
                            AllPoints = 0.0,
                            ContestId = new Guid("06e8bf71-fc93-42ff-8c99-a5265a8ea2e9"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5181),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sunset over the Statue of Liberty",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/7ef91ce8-58f5-416d-a8c2-56d0218e6ebf_sunset2.jpg",
                            Title = "New York sunset",
                            UserId = new Guid("7cc9804e-2106-4943-994d-91be3d1fab8e")
                        },
                        new
                        {
                            Id = new Guid("7780497c-f5e4-43e2-8e90-5067f91475ce"),
                            AllPoints = 0.0,
                            ContestId = new Guid("d2acdd9c-9427-4fc2-897e-5f52da2190dc"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5186),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Usain Bolt breaking the record",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/cb2acc2c-2576-4707-86ae-754e983e1f55_olympics1.jpg",
                            Title = "The best",
                            UserId = new Guid("56763358-b113-4f96-9a4a-5190c421f1fb")
                        },
                        new
                        {
                            Id = new Guid("05505a4d-f749-46e9-928c-039dad92c808"),
                            AllPoints = 0.0,
                            ContestId = new Guid("d2acdd9c-9427-4fc2-897e-5f52da2190dc"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5193),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Michael Phelps winning gold",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/71a3e79d-ee0e-4d4b-9a03-2890c42be96a_olympics2.jpg",
                            Title = "Winner",
                            UserId = new Guid("71cd9097-0c95-4af2-9e43-da7324880583")
                        },
                        new
                        {
                            Id = new Guid("8a178e81-d2c3-44bb-a3d7-79d84f5188b2"),
                            AllPoints = 0.0,
                            ContestId = new Guid("d7b46312-7197-4c79-8384-1ec2b8577f8d"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5198),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The mighty arena of gladiators",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/a6e65cfd-81dd-4c64-aa05-11946f97b102_landmarks1.jpg",
                            Title = "The Colloseum",
                            UserId = new Guid("743f0e66-af28-48b9-8322-61395c10207f")
                        },
                        new
                        {
                            Id = new Guid("351b9dbe-4142-4283-bbc4-f90a8a503925"),
                            AllPoints = 0.0,
                            ContestId = new Guid("d7b46312-7197-4c79-8384-1ec2b8577f8d"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5203),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The last standing wonder of the old world",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/a562ac79-7f5e-48e7-a364-43cc656227bb_landmarks2.jpg",
                            Title = "The Pyramids",
                            UserId = new Guid("021fa300-ffd4-48e2-a93f-d40c17d014f3")
                        },
                        new
                        {
                            Id = new Guid("08f2b9a9-37a8-4852-86c1-4058a62848a9"),
                            AllPoints = 0.0,
                            ContestId = new Guid("f9f89a56-448a-43c4-a098-fe5b13605999"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5209),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Man made beauty",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/b364f4aa-a6af-4570-966f-f1980c6eb636_bridges1.jpeg",
                            Title = "Erasmusbrug",
                            UserId = new Guid("8a20e519-66ad-46b8-b6c3-18c36fa50a1d")
                        },
                        new
                        {
                            Id = new Guid("2b7fb35a-9840-4d4b-b86e-a5e3040117e4"),
                            AllPoints = 0.0,
                            ContestId = new Guid("f9f89a56-448a-43c4-a098-fe5b13605999"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5213),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Engineering genius",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/52dc2b1e-112c-4914-98b9-13137abd989a_bridges2.jpeg",
                            Title = "Goldengate",
                            UserId = new Guid("c463712b-e235-4fe5-840e-a99736c3fb76")
                        },
                        new
                        {
                            Id = new Guid("723b8f6d-95de-487f-a4b2-52f8be99ce11"),
                            AllPoints = 0.0,
                            ContestId = new Guid("42541f52-8d30-4828-bf66-4eda82735edd"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5218),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Greatest place to lose time",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/d8f9b48e-7743-48fe-8e38-ba06e979716e_mansions1.jpg",
                            Title = "Beach house",
                            UserId = new Guid("743f0e66-af28-48b9-8322-61395c10207f")
                        },
                        new
                        {
                            Id = new Guid("94da69ad-71c2-4dca-87a9-def9154ec7b0"),
                            AllPoints = 0.0,
                            ContestId = new Guid("42541f52-8d30-4828-bf66-4eda82735edd"),
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(5224),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nothing like fresh mountain air",
                            IsDeleted = false,
                            IsInWrongCategory = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoUrl = "/Images/c77ff246-1712-4ab3-84cf-15b25966aebd_mansions2.jpg",
                            Title = "Mountain villa",
                            UserId = new Guid("56763358-b113-4f96-9a4a-5190c421f1fb")
                        });
                });

            modelBuilder.Entity("PhotoContest.Data.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("WrongCategory")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f55244de-da0f-4a9c-b8d9-7940a2f97083"),
                            Comment = "Great angle.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(6915),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("e165b91f-03bf-414e-88b7-c51b87775683"),
                            Score = 6.0,
                            UserId = new Guid("a890fe35-c840-4484-bd80-67dbc94ab581"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("8198e13a-30cb-4f4b-99f0-acf31a70b02d"),
                            Comment = "Perfect timing.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7008),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("e165b91f-03bf-414e-88b7-c51b87775683"),
                            Score = 8.0,
                            UserId = new Guid("e240edfc-64b9-4358-a869-5aadb719e128"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("73fe1a7a-e31c-4b4e-a6fa-1ae65e7e1f28"),
                            Comment = "Perfect shot.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7015),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("0fdb02e1-91e1-4132-9ccc-1f73c7f716b9"),
                            Score = 10.0,
                            UserId = new Guid("e240edfc-64b9-4358-a869-5aadb719e128"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("b8e942fb-9e23-48b2-b15f-32a1e2c06315"),
                            Comment = "Shadows are in the way.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7021),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("0fdb02e1-91e1-4132-9ccc-1f73c7f716b9"),
                            Score = 3.0,
                            UserId = new Guid("5d608fdc-f7d4-40f2-b052-61a7ea812a23"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("55cf8205-bfb9-4d8c-8ac1-7861a458bb10"),
                            Comment = "Great shot.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7026),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("fd4b4d23-a4db-4e8b-be63-4af3c4b45757"),
                            Score = 9.0,
                            UserId = new Guid("a890fe35-c840-4484-bd80-67dbc94ab581"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("18d39ed7-120f-4239-8920-b0b826dd3d0a"),
                            Comment = "Mesmerizing shot.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7033),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("5edcd3ee-3033-43fe-a222-97fdac5922ab"),
                            Score = 10.0,
                            UserId = new Guid("5d608fdc-f7d4-40f2-b052-61a7ea812a23"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("a15576fd-9e09-4b2a-b961-60b9204e803b"),
                            Comment = "Unique colors.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7038),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("5edcd3ee-3033-43fe-a222-97fdac5922ab"),
                            Score = 8.0,
                            UserId = new Guid("e240edfc-64b9-4358-a869-5aadb719e128"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("5405c1fb-ab2e-4ada-95f2-c37436d3e24c"),
                            Comment = "Not really shot of a sunset.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7043),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("44e5ce67-461c-4082-9acb-c5aceae13a0c"),
                            Score = 5.0,
                            UserId = new Guid("a890fe35-c840-4484-bd80-67dbc94ab581"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("7e2c2b98-9616-479a-bd1f-61d0510ccb15"),
                            Comment = "Great perspective.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7047),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("44e5ce67-461c-4082-9acb-c5aceae13a0c"),
                            Score = 8.0,
                            UserId = new Guid("e240edfc-64b9-4358-a869-5aadb719e128"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("98deadcb-ffb0-47c7-ac06-4dd5c8fc22fa"),
                            Comment = "Great quality.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7053),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("7780497c-f5e4-43e2-8e90-5067f91475ce"),
                            Score = 8.0,
                            UserId = new Guid("a890fe35-c840-4484-bd80-67dbc94ab581"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("d9beb14d-56c8-42d1-a6b8-5c2a5d0c1615"),
                            Comment = "Very good shot.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7058),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("7780497c-f5e4-43e2-8e90-5067f91475ce"),
                            Score = 7.0,
                            UserId = new Guid("5d608fdc-f7d4-40f2-b052-61a7ea812a23"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("c625e60d-0daa-4b2f-8c9c-d2733495293b"),
                            Comment = "Great timing.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7064),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("05505a4d-f749-46e9-928c-039dad92c808"),
                            Score = 7.0,
                            UserId = new Guid("e240edfc-64b9-4358-a869-5aadb719e128"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("46687750-d00c-419c-933e-9b8e8d6f1db6"),
                            Comment = "Not a very clean shot.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7068),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("05505a4d-f749-46e9-928c-039dad92c808"),
                            Score = 5.0,
                            UserId = new Guid("a890fe35-c840-4484-bd80-67dbc94ab581"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("9bf16f23-4764-4e31-9716-ad756a0761ff"),
                            Comment = "Good setting.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7073),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("8a178e81-d2c3-44bb-a3d7-79d84f5188b2"),
                            Score = 6.0,
                            UserId = new Guid("5d608fdc-f7d4-40f2-b052-61a7ea812a23"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("e1529b05-cc4d-4eef-9bae-718b5acc4784"),
                            Comment = "Quality of the picture is not very good.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7078),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("8a178e81-d2c3-44bb-a3d7-79d84f5188b2"),
                            Score = 4.0,
                            UserId = new Guid("a890fe35-c840-4484-bd80-67dbc94ab581"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("96ea7398-6e64-4735-a252-e1a6a18094a7"),
                            Comment = "The pyramids are not the center of the picture.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7082),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("351b9dbe-4142-4283-bbc4-f90a8a503925"),
                            Score = 5.0,
                            UserId = new Guid("e240edfc-64b9-4358-a869-5aadb719e128"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("9d520a28-1e1b-4477-9894-e0da97fa982e"),
                            Comment = "Not the greatest quality.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7087),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("351b9dbe-4142-4283-bbc4-f90a8a503925"),
                            Score = 6.0,
                            UserId = new Guid("5d608fdc-f7d4-40f2-b052-61a7ea812a23"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("3969dc5b-b149-41aa-a17c-b5ec903aa264"),
                            Comment = "Unique setting",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7092),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("08f2b9a9-37a8-4852-86c1-4058a62848a9"),
                            Score = 8.0,
                            UserId = new Guid("a890fe35-c840-4484-bd80-67dbc94ab581"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("958d719a-7112-4116-bdbb-5eb6f374f4cf"),
                            Comment = "Spectacular shot",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7097),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("08f2b9a9-37a8-4852-86c1-4058a62848a9"),
                            Score = 10.0,
                            UserId = new Guid("e240edfc-64b9-4358-a869-5aadb719e128"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("2ab3c5bb-a6fc-4c08-b9d6-3e093d4a20f0"),
                            Comment = "Very nice colors.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7102),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("2b7fb35a-9840-4d4b-b86e-a5e3040117e4"),
                            Score = 8.0,
                            UserId = new Guid("5d608fdc-f7d4-40f2-b052-61a7ea812a23"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("6c104a76-98ee-4bc5-9cd9-fde937d155e9"),
                            Comment = "Marvelous shot.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7106),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("2b7fb35a-9840-4d4b-b86e-a5e3040117e4"),
                            Score = 6.0,
                            UserId = new Guid("a890fe35-c840-4484-bd80-67dbc94ab581"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("df3841f6-5e8c-4cfe-88eb-09b0e0daaa35"),
                            Comment = "Great place, would love to be there.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7111),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("723b8f6d-95de-487f-a4b2-52f8be99ce11"),
                            Score = 10.0,
                            UserId = new Guid("e240edfc-64b9-4358-a869-5aadb719e128"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("9c211c22-7b53-4395-a6ab-8df8ea3cf774"),
                            Comment = "Great shot.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7116),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("723b8f6d-95de-487f-a4b2-52f8be99ce11"),
                            Score = 7.0,
                            UserId = new Guid("a890fe35-c840-4484-bd80-67dbc94ab581"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("0fb89447-6c1d-4fc7-a93d-29a7c17b5458"),
                            Comment = "Picture is taken for very far.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7122),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("94da69ad-71c2-4dca-87a9-def9154ec7b0"),
                            Score = 4.0,
                            UserId = new Guid("5d608fdc-f7d4-40f2-b052-61a7ea812a23"),
                            WrongCategory = false
                        },
                        new
                        {
                            Id = new Guid("ef107b97-bc8c-44c1-9b54-80744a8e9ec5"),
                            Comment = "Nice colors.",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 725, DateTimeKind.Utc).AddTicks(7126),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhotoId = new Guid("94da69ad-71c2-4dca-87a9-def9154ec7b0"),
                            Score = 7.0,
                            UserId = new Guid("e240edfc-64b9-4358-a869-5aadb719e128"),
                            WrongCategory = false
                        });
                });

            modelBuilder.Entity("PhotoContest.Data.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0a458f4-cba3-4e49-a779-f79a9de41268"),
                            ConcurrencyStamp = "e4251b98-beea-474d-85ba-ffe2888529f9",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("8a73d7c7-c092-4281-8cde-6dd9a9dd747c"),
                            ConcurrencyStamp = "8414baf5-3eef-4bc1-bade-849201cc432b",
                            Name = "Organizer",
                            NormalizedName = "ORGANIZER"
                        },
                        new
                        {
                            Id = new Guid("a117e076-855e-401a-aeab-844fee43a0a2"),
                            ConcurrencyStamp = "f75b7d8b-bc11-483e-8023-1efc192ad972",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("PhotoContest.Data.Models.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9dd48e5a-f5f5-4b90-ad93-e0a5ad62e186"),
                            Name = "Phase 1"
                        },
                        new
                        {
                            Id = new Guid("27c7d81e-eb1c-469b-8919-a532322273cc"),
                            Name = "Phase 2"
                        },
                        new
                        {
                            Id = new Guid("cf6bf4fb-655e-47cc-8dac-4a39cbff74b6"),
                            Name = "Finished"
                        });
                });

            modelBuilder.Entity("PhotoContest.Data.Models.UserContest", b =>
                {
                    b.Property<Guid>("ContestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasUploadedPhoto")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAdded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInvited")
                        .HasColumnType("bit");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("ContestId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserContests");

                    b.HasData(
                        new
                        {
                            ContestId = new Guid("f36e97ee-98af-4f26-93ef-066895d94b2a"),
                            UserId = new Guid("8a20e519-66ad-46b8-b6c3-18c36fa50a1d"),
                            HasUploadedPhoto = false,
                            Id = new Guid("be9c8856-5df8-4577-a7c9-f8f62f8de22c"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("f36e97ee-98af-4f26-93ef-066895d94b2a"),
                            UserId = new Guid("56763358-b113-4f96-9a4a-5190c421f1fb"),
                            HasUploadedPhoto = false,
                            Id = new Guid("61f45846-09fd-4112-b3b8-5aaf029e8a9f"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("548873db-705b-46e7-b88d-230c5f06fd35"),
                            UserId = new Guid("021fa300-ffd4-48e2-a93f-d40c17d014f3"),
                            HasUploadedPhoto = false,
                            Id = new Guid("d00fb4ba-c05c-4a48-8042-0db3b747b226"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("548873db-705b-46e7-b88d-230c5f06fd35"),
                            UserId = new Guid("c463712b-e235-4fe5-840e-a99736c3fb76"),
                            HasUploadedPhoto = false,
                            Id = new Guid("f933eff8-9a79-4937-801a-a80aaa8d4b19"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("e2450bf8-c019-4442-a2c3-ed0210586eed"),
                            UserId = new Guid("7cc9804e-2106-4943-994d-91be3d1fab8e"),
                            HasUploadedPhoto = false,
                            Id = new Guid("1e1008e0-63f6-437a-8c86-347dcf905b7d"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("e2450bf8-c019-4442-a2c3-ed0210586eed"),
                            UserId = new Guid("71cd9097-0c95-4af2-9e43-da7324880583"),
                            HasUploadedPhoto = false,
                            Id = new Guid("bb047135-03e9-4957-8248-306eaf8600cc"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("42541f52-8d30-4828-bf66-4eda82735edd"),
                            UserId = new Guid("56763358-b113-4f96-9a4a-5190c421f1fb"),
                            HasUploadedPhoto = false,
                            Id = new Guid("5d33bf17-933f-4fd4-93ba-8fa2a7944bd1"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("42541f52-8d30-4828-bf66-4eda82735edd"),
                            UserId = new Guid("743f0e66-af28-48b9-8322-61395c10207f"),
                            HasUploadedPhoto = false,
                            Id = new Guid("95afb371-52c1-4aa3-85f6-c7341b3155bc"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("f9f89a56-448a-43c4-a098-fe5b13605999"),
                            UserId = new Guid("c463712b-e235-4fe5-840e-a99736c3fb76"),
                            HasUploadedPhoto = false,
                            Id = new Guid("6b50dbde-50d9-4b5c-9425-1ea4c97a4146"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("f9f89a56-448a-43c4-a098-fe5b13605999"),
                            UserId = new Guid("8a20e519-66ad-46b8-b6c3-18c36fa50a1d"),
                            HasUploadedPhoto = false,
                            Id = new Guid("3ada8ce7-5c5d-4892-a676-b9d035de1d42"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("d7b46312-7197-4c79-8384-1ec2b8577f8d"),
                            UserId = new Guid("021fa300-ffd4-48e2-a93f-d40c17d014f3"),
                            HasUploadedPhoto = false,
                            Id = new Guid("d8343994-bcae-4096-ba78-d8b669be0049"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("d7b46312-7197-4c79-8384-1ec2b8577f8d"),
                            UserId = new Guid("743f0e66-af28-48b9-8322-61395c10207f"),
                            HasUploadedPhoto = false,
                            Id = new Guid("863aa575-bc89-4de7-9895-ff8d4f70fea8"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("d2acdd9c-9427-4fc2-897e-5f52da2190dc"),
                            UserId = new Guid("56763358-b113-4f96-9a4a-5190c421f1fb"),
                            HasUploadedPhoto = false,
                            Id = new Guid("d10fb8e0-d659-4cd9-8da9-d84b98e4e8f1"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("d2acdd9c-9427-4fc2-897e-5f52da2190dc"),
                            UserId = new Guid("71cd9097-0c95-4af2-9e43-da7324880583"),
                            HasUploadedPhoto = false,
                            Id = new Guid("00aa09e3-43d0-46b0-a213-45d4a72a7b4c"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("06e8bf71-fc93-42ff-8c99-a5265a8ea2e9"),
                            UserId = new Guid("7cc9804e-2106-4943-994d-91be3d1fab8e"),
                            HasUploadedPhoto = false,
                            Id = new Guid("ed1dd103-4469-4699-ba7e-59b14805a8a8"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        },
                        new
                        {
                            ContestId = new Guid("06e8bf71-fc93-42ff-8c99-a5265a8ea2e9"),
                            UserId = new Guid("c463712b-e235-4fe5-840e-a99736c3fb76"),
                            HasUploadedPhoto = false,
                            Id = new Guid("0ea3f579-a3ec-499e-82d8-35ab5c0af28f"),
                            IsAdded = false,
                            IsInvited = false,
                            Points = 0
                        });
                });

            modelBuilder.Entity("PhotoContest.Data.Rank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ranks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("acca215b-d737-406c-b87c-696fb22ce001"),
                            Name = "Junkie"
                        },
                        new
                        {
                            Id = new Guid("41c8e397-f768-48ed-b8f1-f8a238c739b1"),
                            Name = "Enthusiast"
                        },
                        new
                        {
                            Id = new Guid("a9576301-3157-454f-86ce-85bb5eb2dfc9"),
                            Name = "Master"
                        },
                        new
                        {
                            Id = new Guid("0b1728c7-5582-4958-9e97-52c9b1d44cdb"),
                            Name = "Wise and Benevolent Photo Dictator"
                        },
                        new
                        {
                            Id = new Guid("0e4ac61d-7d3b-4dcb-9ed0-d47cf1c247ce"),
                            Name = "Organizer"
                        },
                        new
                        {
                            Id = new Guid("a036e464-8996-4e40-9a81-39239cf72402"),
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("PhotoContest.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("OverallPoints")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid>("RankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RankId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d4c48e4-8870-417b-8ac6-e78efe1aaab5"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "df8712f9-2366-47b1-bdf9-caf5a4bfc331",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 647, DateTimeKind.Utc).AddTicks(6722),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            IsDeleted = false,
                            LastName = "Admin",
                            LockoutEnabled = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "ADMIN@MAIL.COM",
                            NormalizedUserName = "ADMIN@MAIL.COM",
                            OverallPoints = 0,
                            PasswordHash = "AQAAAAEAACcQAAAAEDWUbxBKGcnTvCvbgBE9qC5huf5b0EiytM3xRtSL+EUkpbXtF3yypQiwLAYafs1a4A==",
                            PhoneNumberConfirmed = false,
                            RankId = new Guid("a036e464-8996-4e40-9a81-39239cf72402"),
                            SecurityStamp = "DC6E275DD1E24957A7781D42BB68299B",
                            TwoFactorEnabled = false,
                            UserName = "admin@mail.com"
                        },
                        new
                        {
                            Id = new Guid("e240edfc-64b9-4358-a869-5aadb719e128"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c0a0438f-f8b9-4cf1-a90b-c79ed4e77beb",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 647, DateTimeKind.Utc).AddTicks(8007),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "eric.berg@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Eric",
                            IsDeleted = false,
                            LastName = "Berg",
                            LockoutEnabled = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "ERIC.BERG@MAIL.COM",
                            NormalizedUserName = "ERIC.BERG@MAIL.COM",
                            OverallPoints = 0,
                            PasswordHash = "AQAAAAEAACcQAAAAEDdqOESNZZ+xZrJbZ8AsumrSaJbHV2+Fk1VNkm50HkivaZo4tXyTKob3AgxvOPKO/g==",
                            PhoneNumberConfirmed = false,
                            RankId = new Guid("0e4ac61d-7d3b-4dcb-9ed0-d47cf1c247ce"),
                            SecurityStamp = "DC6E275DD1E24957A7781D42BB68293B",
                            TwoFactorEnabled = false,
                            UserName = "eric.berg@mail.com"
                        },
                        new
                        {
                            Id = new Guid("8a20e519-66ad-46b8-b6c3-18c36fa50a1d"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a30aa4a5-9c7c-4895-a76d-bfbb92b72f61",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 647, DateTimeKind.Utc).AddTicks(8035),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "georgi.ivanov@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Georgi",
                            IsDeleted = false,
                            LastName = "Ivanov",
                            LockoutEnabled = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "GEORGI.IVANOV@MAIL.COM",
                            NormalizedUserName = "GEORGI.IVANOV@MAIL.COM",
                            OverallPoints = 0,
                            PasswordHash = "AQAAAAEAACcQAAAAEElHVovP/sMOaXGCJEdagE8FGEX6eWXoLlXUmmwvnIrBdE3Bj0jVK3amJM8MxrI04w==",
                            PhoneNumberConfirmed = false,
                            RankId = new Guid("acca215b-d737-406c-b87c-696fb22ce001"),
                            SecurityStamp = "DC6E275DD1E24957A7781D42BB68292B",
                            TwoFactorEnabled = false,
                            UserName = "georgi.ivanov@mail.com"
                        },
                        new
                        {
                            Id = new Guid("021fa300-ffd4-48e2-a93f-d40c17d014f3"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9b716958-099c-4a82-b97b-b997d9f7b954",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 647, DateTimeKind.Utc).AddTicks(8111),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.smith@mail.com",
                            EmailConfirmed = false,
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Smith",
                            LockoutEnabled = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "JOHN.SMITH@MAIL.COM",
                            NormalizedUserName = "JOHN.SMITH@MAIL.COM",
                            OverallPoints = 0,
                            PasswordHash = "AQAAAAEAACcQAAAAEOp5KzFfBeqm4Q3eW1Yx0+Y4AUxtkFZqwMCTMGxHWTsfgdRXOYMiQfTH/B1pGJZNfg==",
                            PhoneNumberConfirmed = false,
                            RankId = new Guid("acca215b-d737-406c-b87c-696fb22ce001"),
                            SecurityStamp = "DC6E275DD1E25957A7781D42BB68299B",
                            TwoFactorEnabled = false,
                            UserName = "john.smith@mail.com"
                        },
                        new
                        {
                            Id = new Guid("743f0e66-af28-48b9-8322-61395c10207f"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "53149cd3-c9f2-4f3b-a187-d3cede54374a",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 647, DateTimeKind.Utc).AddTicks(8120),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "steven.king@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Steven",
                            IsDeleted = false,
                            LastName = "King",
                            LockoutEnabled = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "STEVEN.KING@MAIL.COM",
                            NormalizedUserName = "STEVEN.KING@MAIL.COM",
                            OverallPoints = 0,
                            PasswordHash = "AQAAAAEAACcQAAAAEPTX7Tk5RZRAzQJnbk6NfBTkSuMF6uLiot12CL102Pb1UpeukO8EYznwM10vB1+7fw==",
                            PhoneNumberConfirmed = false,
                            RankId = new Guid("acca215b-d737-406c-b87c-696fb22ce001"),
                            SecurityStamp = "DC6E375DD1E25957A7781D42BB68299B",
                            TwoFactorEnabled = false,
                            UserName = "steven.king@mail.com"
                        },
                        new
                        {
                            Id = new Guid("71cd9097-0c95-4af2-9e43-da7324880583"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3e453e3d-f401-4531-a89d-a437e7b81709",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 647, DateTimeKind.Utc).AddTicks(8138),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "robert.scott@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Robert",
                            IsDeleted = false,
                            LastName = "Scott",
                            LockoutEnabled = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "ROBERT.SCOTT@MAIL.COM",
                            NormalizedUserName = "ROBERT.SCOTT@MAIL.COM",
                            OverallPoints = 0,
                            PasswordHash = "AQAAAAEAACcQAAAAEOjVjJ2o52gSutboYMz3wC4hHsrVl9QCcLyre9Hhic8a3lxjuS9fa8aslaf9ym/FsQ==",
                            PhoneNumberConfirmed = false,
                            RankId = new Guid("acca215b-d737-406c-b87c-696fb22ce001"),
                            SecurityStamp = "DC6E375DD1E25957A7981D42BB68299B",
                            TwoFactorEnabled = false,
                            UserName = "robert.scott@mail.com"
                        },
                        new
                        {
                            Id = new Guid("7cc9804e-2106-4943-994d-91be3d1fab8e"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "14716ff3-22dc-4122-8302-12c7bc490f8f",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 647, DateTimeKind.Utc).AddTicks(8145),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jimmy.brown@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Jimmy",
                            IsDeleted = false,
                            LastName = "Brown",
                            LockoutEnabled = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "JIMMY.BROWN@MAIL.COM",
                            NormalizedUserName = "JIMMY.BROWN@MAIL.COM",
                            OverallPoints = 0,
                            PasswordHash = "AQAAAAEAACcQAAAAEP1qQSMKzFMilGxznm4gZi8a0D+fUvx906cTCEDT5WAi0m4NhBdzyRhtwna8bv3HZA==",
                            PhoneNumberConfirmed = false,
                            RankId = new Guid("acca215b-d737-406c-b87c-696fb22ce001"),
                            SecurityStamp = "DC6E375DD1E25957A7981D42BB68399B",
                            TwoFactorEnabled = false,
                            UserName = "jimmy.brown@mail.com"
                        },
                        new
                        {
                            Id = new Guid("56763358-b113-4f96-9a4a-5190c421f1fb"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a08e691a-a22d-4754-95af-619bcf021ac7",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 647, DateTimeKind.Utc).AddTicks(8153),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sam.stevens@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Sam",
                            IsDeleted = false,
                            LastName = "Stevens",
                            LockoutEnabled = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "SAM.STEVENS@MAIL.COM",
                            NormalizedUserName = "SAM.STEVENS@MAIL.COM",
                            OverallPoints = 200,
                            PasswordHash = "AQAAAAEAACcQAAAAEMpG7BU5anZOvzUq0pQ5PAtGmaBKGB9fCBBVihPxXDmk79MZ7A2HtkJIuqXaqh/Acg==",
                            PhoneNumberConfirmed = false,
                            RankId = new Guid("a9576301-3157-454f-86ce-85bb5eb2dfc9"),
                            SecurityStamp = "DC6E375DD1E25957A7981D48BB68399B",
                            TwoFactorEnabled = false,
                            UserName = "sam.stevens@mail.com"
                        },
                        new
                        {
                            Id = new Guid("c463712b-e235-4fe5-840e-a99736c3fb76"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b925c407-5321-4f6a-a6a9-e77d0799c5a6",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 647, DateTimeKind.Utc).AddTicks(8453),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kyle.sins@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Kyle",
                            IsDeleted = false,
                            LastName = "Sins",
                            LockoutEnabled = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "KYLE.SINS@MAIL.COM",
                            NormalizedUserName = "KYLE.SINS@MAIL.COM",
                            OverallPoints = 1200,
                            PasswordHash = "AQAAAAEAACcQAAAAEG4djghV0LA07bOzOp/PJeESnmSj1LIqruEudZCw5wSuEBPbnNQ9KpjOPZHhBjiF6g==",
                            PhoneNumberConfirmed = false,
                            RankId = new Guid("0b1728c7-5582-4958-9e97-52c9b1d44cdb"),
                            SecurityStamp = "DC6E375DD2E25957A7981D48BB68399B",
                            TwoFactorEnabled = false,
                            UserName = "kyle.sins@mail.com"
                        },
                        new
                        {
                            Id = new Guid("5d608fdc-f7d4-40f2-b052-61a7ea812a23"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8a887aa2-b507-4d79-b6bf-baa6e793b97b",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 647, DateTimeKind.Utc).AddTicks(8477),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara.smith@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Sara",
                            IsDeleted = false,
                            LastName = "Smith",
                            LockoutEnabled = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "SARA.SMITH@MAIL.COM",
                            NormalizedUserName = "SARA.SMITH@MAIL.COM",
                            OverallPoints = 0,
                            PasswordHash = "AQAAAAEAACcQAAAAEM7PdL70Ricw7ov/UXwC4p9PFakUGDV4he2M05TyPZqn0DRmzSu/gLLKvjhxCiVurQ==",
                            PhoneNumberConfirmed = false,
                            RankId = new Guid("0e4ac61d-7d3b-4dcb-9ed0-d47cf1c247ce"),
                            SecurityStamp = "DC6E275DD1E24917A7781D42BB68293B",
                            TwoFactorEnabled = false,
                            UserName = "sara.smith@mail.com"
                        },
                        new
                        {
                            Id = new Guid("a890fe35-c840-4484-bd80-67dbc94ab581"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7c5257e8-c8a4-462c-83be-f081b94a51ca",
                            CreatedOn = new DateTime(2021, 6, 6, 19, 20, 17, 647, DateTimeKind.Utc).AddTicks(8486),
                            DeletedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.beck@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Jane",
                            IsDeleted = false,
                            LastName = "Beck",
                            LockoutEnabled = true,
                            ModifiedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "JANE.BECK@MAIL.COM",
                            NormalizedUserName = "JANE.BECK@MAIL.COM",
                            OverallPoints = 0,
                            PasswordHash = "AQAAAAEAACcQAAAAEErRzV0DKLwpChOYaniko/JzeQ+4wdnz5sbmIaIi7Mz+3uvxXOROjF/OvjO9vyRkIA==",
                            PhoneNumberConfirmed = false,
                            RankId = new Guid("0e4ac61d-7d3b-4dcb-9ed0-d47cf1c247ce"),
                            SecurityStamp = "DC6E275DD1E24917A7781D42BB64293B",
                            TwoFactorEnabled = false,
                            UserName = "jane.beck@mail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("PhotoContest.Data.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("PhotoContest.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("PhotoContest.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("PhotoContest.Data.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhotoContest.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("PhotoContest.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PhotoContest.Data.Models.Contest", b =>
                {
                    b.HasOne("PhotoContest.Data.Models.Category", "Category")
                        .WithMany("Contests")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PhotoContest.Data.Models.Status", "Status")
                        .WithMany("Contests")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PhotoContest.Data.Models.JuryMember", b =>
                {
                    b.HasOne("PhotoContest.Data.Models.Contest", "Contest")
                        .WithMany("Juries")
                        .HasForeignKey("ContestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PhotoContest.Data.User", "User")
                        .WithMany("Juries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PhotoContest.Data.Models.Photo", b =>
                {
                    b.HasOne("PhotoContest.Data.Models.Contest", "Contest")
                        .WithMany("Photos")
                        .HasForeignKey("ContestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PhotoContest.Data.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PhotoContest.Data.Models.Review", b =>
                {
                    b.HasOne("PhotoContest.Data.Models.Photo", "Photo")
                        .WithMany("Reviews")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PhotoContest.Data.User", "Evaluator")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PhotoContest.Data.Models.UserContest", b =>
                {
                    b.HasOne("PhotoContest.Data.Models.Contest", "Contest")
                        .WithMany("UserContests")
                        .HasForeignKey("ContestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PhotoContest.Data.User", "User")
                        .WithMany("UserContests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PhotoContest.Data.User", b =>
                {
                    b.HasOne("PhotoContest.Data.Rank", "Rank")
                        .WithMany("Users")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
