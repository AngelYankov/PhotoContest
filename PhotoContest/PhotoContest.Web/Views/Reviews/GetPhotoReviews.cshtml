@model IEnumerable<ReviewViewModel>
@inject SignInManager<User> SignInManager
@{
    ViewData["Title"] = "GetPhotoReviews";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.Count() == 0)
{
    <h3>There are no reviews for this photo</h3>
}
else
{
    <h2>All reviews for photo</h2>
    <table class="table">
        <thead class="table-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PhotoTitle)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Comment)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Score)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Evaluator)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhotoTitle)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Comment)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Score)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Evaluator)
                    </td>
                    <td>
                        @if (this.SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Organizer")))
                        {
                            <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<a class="btn btn-outline-dark" onclick="history.go(-1);">Back</a>
