@model IEnumerable<ContetsViewModel>

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Filtered contests";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>My contests</h2>


@if (Model.Count() == 0)
{
    <h3>You are not participating in any contests in this stage.</h3>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <form asp-action="GetByUserFiltered">
                <table>
                    <tr>
                        <th></th>
                        <th></th>
                    </tr>
                    <tr>
                        <td>
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <select asp-for="@Model.First().Filter" class="form-select" style="width: 150px;">
                                <option value="current">Current</option>
                                <option value="past">Past</option>
                            </select>
                        </td>
                        <td>
                            <input type="submit" value="Filter" class="btn btn-success" />
                        </td>
                    </tr>
                </table>
            </form>
        </div>
    </div>
    <br />
    <table class="table">
        <thead class="table-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OpenOrInvitational)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TimeUntilNextPhase)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OpenOrInvitational)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TimeUntilNextPhase)
                    </td>
                    @if (item.Status == "Phase 1" && item.AllUserContests.Any(uc => uc.Contest.Name == item.Name
                                              && uc.User.UserName == UserManager.GetUserName(this.SignInManager.Context.User)
                                              && !item.AllPhotos.Any(p => p.Contest == item.Name
                                              && p.Username == UserManager.GetUserName(this.SignInManager.Context.User))))
                    {
                        <td>
                            <a class="btn btn-outline-dark" asp-controller="Photos" asp-action="Create" asp-route-contestName="@item.Name">Add photo</a>
                        </td>
                    }
                    else if ((item.Status == "Phase 1")
                           && item.AllPhotos.Any(p => p.Contest == item.Name
                           && p.Username == UserManager.GetUserName(this.SignInManager.Context.User)))
                    {
                        <td>
                            <p>Photo waiting evaluation.</p>
                        </td>
                    }
                    else if (item.Status == "Finished" && item.AllUserContests.Any(uc => uc.Contest.Name == item.Name && uc.User.UserName == UserManager.GetUserName(this.SignInManager.Context.User)))
                    {
                        <td>
                            <a class="btn btn-outline-dark" asp-controller="Photos" asp-action="GetContestsPhotos" asp-route-contestName="@item.Name">View photos</a>
                        </td>
                    }
                    else
                    {
                        <td></td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

<div>
    <a class="btn btn-outline-dark" asp-action="AllOpen">All Contests</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
