@model IEnumerable<ViewModel>
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "OpenContest";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Open contests</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimeUntilNextPhase)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeUntilNextPhase)
            </td>
            @if (item.Status == "Phase 1" && !item.AllUserContests.Any(uc=>uc.Contest.Name == item.Name && uc.User.UserName == UserManager.GetUserName(this.SignInManager.Context.User)))
            {
                <td>
                    <a asp-action="EnrollSubmit" asp-route-name="@item.Name">Enroll</a>
                </td>
                <td>
                    <a asp-controller="Photos" asp-action="Create" asp-route-contestName="@item.Name">Add photo</a>
                </td>
            }
        </tr>
        }
    </tbody>
</table>

<div>
    <a asp-action="GetOpen">Back to filtering</a>
</div>
<div>
    <a asp-action="Index">Back to list</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
