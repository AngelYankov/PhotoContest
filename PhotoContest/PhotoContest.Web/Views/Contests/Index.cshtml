@model IEnumerable<ContetsViewModel>

@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>All contests</h1>

<p>
    <a class="btn btn-outline-dark" asp-action="Create">Create new contest</a>
</p>

<form asp-action="GetByPhaseFiltered">
    <table id="filterTable">
        <tr id="tableR">
            <th id="tableH">
                <p>Filter by</p>
            </th >
            <th id="tableH">
                <p>Sort by</p>
            </th>
            <th id="tableH">
                <p>Order by</p>
            </th>
            <th id="tableH"></th>
        </tr>
        <tr>
            <td>
                <select asp-for="@Model.First().Filter" class="form-select" style="width: 150px;">
                    <option value="phase 1">Phase 1</option>
                    <option value="phase 2">Phase 2</option>
                    <option value="finished">Finished</option>
                </select>
            </td>
            <td>
                <select asp-for="@Model.First().SortBy" class="form-select" style="width: 150px;">
                    <option value="name">Name</option>
                    <option value="category">Category</option>
                    <option value="newest">Newest</option>
                    <option value="oldest">Oldest</option>
                </select>
            </td>
            <td>
                <select asp-for="@Model.First().OrderBy" class="form-select" style="width: 150px;">
                    <option value="asc">Asc</option>
                    <option value="desc">Desc</option>
                </select>
            </td>
            <td>
                <input type="submit" value="Filter" class="btn btn-success" />
            </td>
        </tr>
    </table>
</form>
<br />
<table class="table">
    <thead class="table-dark">
        <tr>
            <th>#</th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OpenOrInvitational)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phase1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phase2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Finished)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{ var x = 0;}
        @foreach (var item in Model)
        {
            <tr>
                <td>@Interlocked.Increment(ref x)</td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OpenOrInvitational)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phase1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phase2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Finished)
                </td>
                <td>
                    <a class="btn btn-outline-dark" asp-action="Details" asp-route-name="@item.Name">Details</a>
                    <a class="btn btn-outline-dark" asp-action="Edit" asp-route-name="@item.Name">Edit</a>
                    <a class="btn btn-outline-dark" asp-controller="Photos" asp-action="GetContestsPhotos" asp-route-contestName="@item.Name">Photos</a>
                    <a class="btn btn-outline-danger" asp-action="Delete" asp-route-name="@item.Name">Delete</a>
                    @if (item.Status == "Phase 1" || item.Status == "Phase 2")
                    {
                        <a class="btn btn-outline-dark" asp-action="ChooseJury" asp-route-name="@item.Name">Choose jury</a>
                    }
                    @if (item.OpenOrInvitational == "Invitational" && item.Status == "Phase 1")
                    {
                        <a class="btn btn-outline-dark" asp-action="Invite" asp-route-name="@item.Name">Invite</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
